<?php

namespace Tests\Feature;


use App\Post;
use App\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class LikesTest extends TestCase
{
    protected $post;
    protected $user;
    use DatabaseTransactions;


    function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->post = factory(Post::class)->create();
        $this->user = factory(User::class)->create();
    }

    /** @test */
    function a_user_can_like_a_post()
    {

        //Given I Have post
        //I have user
        // when user likes post

        $this->post->like($this->user->id);


        // then should post be liked & saved in database
        $this->assertDatabaseHas('likes', [
            'user_id' => $this->user->id,
            'likeable_id' => $this->post->id,
            'likeable_type' => get_class($this->post)
        ]);

        $this->assertTrue($this->post->isLiked($this->user->id));
    }

    /** @test */
    function a_user_can_unlike_a_post()
    {


        $this->post->like($this->user->id);
        $this->post->unLike($this->user->id);

        // then should post be liked & saved in database
        $this->assertDatabaseMissing('likes', [
            'user_id' => $this->user->id,
            'likeable_id' => $this->post->id,
            'likeable_type' => get_class($this->post)
        ]);


        $this->assertFalse($this->post->isLiked($this->user->id));
    }


    /** @test */
    function a_user_can_toggle_like_a_post()
    {

        $this->post->toogle($this->user->id);
        $this->assertTrue($this->post->isLiked($this->user->id));

        $this->post->toogle($this->user->id);
        $this->assertFalse($this->post->isLiked($this->user->id));
    }

    /** @test */
    function a_post_can_show_likes_count()
    {

        $this->post->like($this->user->id);

        $this->assertEquals(1, $this->post->likeCount);

    }


}
